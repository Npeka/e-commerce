definitions:
  models.TokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      day_of_birth:
        type: string
      email:
        type: string
      full_name:
        type: string
      gender:
        $ref: '#/definitions/models.UserGender'
      id:
        type: string
      password:
        type: string
      password_reset_token:
        type: string
      refresh_token:
        type: string
      role:
        $ref: '#/definitions/models.UserRole'
      updated_at:
        type: string
    required:
    - email
    - password
    type: object
  models.UserGender:
    enum:
    - male
    - female
    - other
    type: string
    x-enum-varnames:
    - MALE
    - FEMALE
    - OTHER
  models.UserRole:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - USER
    - ADMIN
info:
  contact: {}
paths:
  /auth/signin:
    post:
      consumes:
      - application/json
      description: Sign in
      parameters:
      - description: User data for authentication
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TokenResponse'
      summary: Sign in
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Sign up
      parameters:
      - description: User data for authentication
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TokenResponse'
      summary: Sign up
      tags:
      - auth
swagger: "2.0"
